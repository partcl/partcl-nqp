Big Goals

* Document how this version works.

Tasks/Bugs:

* regexp $re $str (blocker for t/tcl_time.t)
* regsub -all <exp> <string> <replace>
* Need to throw an exception when trying to convert something to an
  integer that isn't. (See partcl's tclstring's to_integer) (blocker for
  t/tcl_time.t)
* [expr !<token>]
* support a bare minimum unknown - invoking a non-existant command should
  result in a tcl error, not a parrot error. (t/tcl_misc.t)
* list elements can be quoted words. (See puts [join {"a" b}]) - blocking
  t/tcl_backslash.t
* t/cmd_{for,while}.t both dying with "Lexical '$body' not found"
  in [for], this $body error occurs in the eval($body) invocation inside
  the while loop. (which is odd, because that should be long gone.)

* [package] (at least as much as partcl has) (blocker for tcltest.tcl)
* support tcl-style indexing, (end-...) (blocking t/cmd_string.t)
* if {[set a not-empty] == ""} {puts yes} (blocking library/init.tcl)
  This should not print anything, but prints "yes", presumably due to
  integer coercion - tcl allows strings to be matched in this way, if int
  coercion is not possible.

* support associative arrays
* error on references to non-existant variables
