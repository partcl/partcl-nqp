# Copyright (C) 2006-2009, The Perl Foundation.
# $Id$

PARROT_ARGS      =

# values from parrot_config
PARROT_BIN_DIR     = @bindir@
PARROT_VERSION     = @versiondir@
PARROT_INCLUDE_DIR = @includedir@$(PARROT_VERSION)
PARROT_LIB_DIR     = @libdir@$(PARROT_VERSION)
PARROT_SRC_DIR     = @srcdir@$(PARROT_VERSION)
PARROT_LIBRARY_DIR = $(PARROT_LIB_DIR)/library
HAS_ICU            = @has_icu@

CC            = @cc@
CFLAGS        = @ccflags@ @cc_shared@ @cc_debug@ @ccwarn@ @cc_hasjit@ @cg_flag@ @gc_flag@
EXE           = @exe@
LD            = @ld@
LDFLAGS       = @ldflags@ @ld_debug@
LD_LOAD_FLAGS = @ld_load_flags@
LIBPARROT     = @inst_libparrot_ldflags@
O             = @o@
LOAD_EXT      = @load_ext@
PERL          = @perl@
CP            = @cp@
MV            = @mv@
RM_F          = @rm_f@
MKPATH        = $(PERL) -MExtUtils::Command -e mkpath
CHMOD         = $(PERL) -MExtUtils::Command -e chmod

# locations of parrot resources
PARROT           = $(PARROT_BIN_DIR)/parrot$(EXE)
PARROT_NQP       = $(PARROT_BIN_DIR)/parrot-nqp$(EXE)
PBC_TO_EXE       = $(PARROT_BIN_DIR)/pbc_to_exe$(EXE)
PARROT_TOOLS_DIR = $(PARROT_LIB_DIR)/tools
PARROT_PERL_LIB  = $(PARROT_TOOLS_DIR)/lib

NQP_LANG_DIR     = $(PARROT_LIB_DIR)/languages/nqp

PMTCL_EXE     = pmtcl$(EXE)
PMTCL_G_PIR   = src/gen/pmtcl-grammar.pir
PMTCL_A_PIR   = src/gen/pmtcl-actions.pir
PMTCL_C_PIR   = src/gen/pmtcl-compiler.pir
PMTCL_B_PIR   = src/gen/pmtcl-commands-main.pir
PMTCL_B_I_PIR = src/gen/pmtcl-commands-info.pir
PMTCL_B_N_PIR = src/gen/pmtcl-commands-namespace.pir
PMTCL_B_P_PIR = src/gen/pmtcl-commands-package.pir
PMTCL_B_S_PIR = src/gen/pmtcl-commands-string.pir
TCLLEXPAD_PIR = src/gen/tcllexpad.pir
ARE_G_PIR     = src/gen/are-grammar.pir
ARE_A_PIR     = src/gen/are-actions.pir
ARE_C_PIR     = src/gen/are-compiler.pir
INIT_PIR      = src/gen/init.pir

PMTCL_SOURCES = \
    src/PmTcl.pir \
    $(PMTCL_G_PIR) \
    $(PMTCL_A_PIR) \
    $(PMTCL_C_PIR) \
    $(PMTCL_B_PIR) \
    $(PMTCL_B_I_PIR) \
    $(PMTCL_B_N_PIR) \
    $(PMTCL_B_P_PIR) \
    $(PMTCL_B_S_PIR) \
    $(TCLLEXPAD_PIR) \
    $(ARE_G_PIR) \
    $(ARE_A_PIR) \
    $(ARE_C_PIR) \
    $(INIT_PIR) \
    src/class/tcllist.pir \
    src/class/tclstring.pir

CLEANUPS = \
  *.manifest \
  *.pdb \
  *.c\
  *.o\
  src/gen/*.pir \
  $(PMTCL_EXE) \
  pmtcl.pbc

all: $(PMTCL_EXE) 

$(PMTCL_EXE) : $(PMTCL_SOURCES)
	$(PARROT) -o pmtcl.pbc src/PmTcl.pir
	$(PBC_TO_EXE) pmtcl.pbc

$(PMTCL_G_PIR): src/PmTcl/Grammar.pm
	$(PARROT_NQP) --target=pir -o $(PMTCL_G_PIR) src/PmTcl/Grammar.pm
$(PMTCL_A_PIR): src/PmTcl/Actions.pm
	$(PARROT_NQP) --target=pir -o $(PMTCL_A_PIR) src/PmTcl/Actions.pm
$(PMTCL_C_PIR): src/PmTcl/Compiler.pm
	$(PARROT_NQP) --target=pir -o $(PMTCL_C_PIR) src/PmTcl/Compiler.pm
$(PMTCL_B_PIR): src/PmTcl/commands/main.pm
	$(PARROT_NQP) --target=pir -o $(PMTCL_B_PIR) src/PmTcl/commands/main.pm
$(PMTCL_B_I_PIR): src/PmTcl/commands/info.pm
	$(PARROT_NQP) --target=pir -o $(PMTCL_B_I_PIR) src/PmTcl/commands/info.pm
$(PMTCL_B_N_PIR): src/PmTcl/commands/namespace.pm
	$(PARROT_NQP) --target=pir -o $(PMTCL_B_N_PIR) src/PmTcl/commands/namespace.pm
$(PMTCL_B_P_PIR): src/PmTcl/commands/package.pm
	$(PARROT_NQP) --target=pir -o $(PMTCL_B_P_PIR) src/PmTcl/commands/package.pm
$(PMTCL_B_S_PIR): src/PmTcl/commands/string.pm
	$(PARROT_NQP) --target=pir -o $(PMTCL_B_S_PIR) src/PmTcl/commands/string.pm
$(TCLLEXPAD_PIR): src/TclLexPad.pm
	$(PARROT_NQP) --target=pir -o $(TCLLEXPAD_PIR) src/TclLexPad.pm
$(ARE_G_PIR): src/ARE/Grammar.pm
	$(PARROT_NQP) --target=pir -o $(ARE_G_PIR) src/ARE/Grammar.pm
$(ARE_A_PIR): src/ARE/Actions.pm
	$(PARROT_NQP) --target=pir -o $(ARE_A_PIR) src/ARE/Actions.pm
$(ARE_C_PIR): src/ARE/Compiler.pm
	$(PARROT_NQP) --target=pir -o $(ARE_C_PIR) src/ARE/Compiler.pm
$(INIT_PIR): src/init.pm
	$(PARROT_NQP) --target=pir -o $(INIT_PIR) src/init.pm

## testing

TEST_FILES = \
  t/sanity.t \
  t/cmd_after.t \
  t/cmd_concat.t \
  t/cmd_llength.t \
  t/cmd_join.t \
  t/cmd_split.t \
  t/tcl_command_subst.t

test: $(PMTCL_EXE)
	prove --exec=./$(PMTCL_EXE) $(TEST_FILES)

## cleaning

clean:
	$(RM_F) $(CLEANUPS)

distclean: realclean

realclean: clean
	$(RM_F) Makefile

testclean:
